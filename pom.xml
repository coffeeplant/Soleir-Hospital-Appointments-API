<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">  
  <modelVersion>4.0.0</modelVersion>  
  <parent> 
    <groupId>org.springframework.boot</groupId>  
    <artifactId>spring-boot-starter-parent</artifactId>  
    <version>2.3.1.RELEASE</version>  
    <relativePath/>
  </parent>  
  <groupId>com.soleir</groupId>  
  <artifactId>soleir-api</artifactId>  
  <version>0.0.1-SNAPSHOT</version>  
  <name>soleir-api</name>  
  <description>Soleir api with jar</description>  
  <properties> 
    <java.version>11</java.version>  
    <graphql.spring.version>7.1.0</graphql.spring.version>  
    <kotlin.version>1.3.70</kotlin.version> 
  </properties>  
  <dependencies> 
    <!--DATABASE CONNECTION-->  
    <!--MS Sql Server connection-->  
    <dependency> 
      <groupId>com.microsoft.sqlserver</groupId>  
      <artifactId>mssql-jdbc</artifactId>  
      <version>9.2.1.jre11</version>  
      <scope>runtime</scope> 
    </dependency>  
    <!--MySQL connection-->  
    <dependency> 
      <groupId>mysql</groupId>  
      <artifactId>mysql-connector-java</artifactId>  
      <version>8.0.11</version> 
    </dependency>  
    <!--Runs JPA data annotations on start-up-->  
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-data-jpa</artifactId> 
    </dependency>  
    <!--Runs database connections on start-up using JDBC driver-->  
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-jdbc</artifactId>  
      <version>2.3.9.RELEASE</version> 
    </dependency>  
    <!--Hibernate for Object Relational Mapping of the database-->  
    <dependency> 
      <groupId>org.hibernate</groupId>  
      <artifactId>hibernate-core</artifactId>  
      <version>5.4.30.Final</version> 
    </dependency>  
    <dependency> 
      <groupId>org.hibernate</groupId>  
      <artifactId>hibernate-entitymanager</artifactId>  
      <version>5.3.6.Final</version> 
    </dependency>  
    <!--Java library that automates a lot such as getters, setters and constructor-->  
    <dependency> 
      <groupId>org.projectlombok</groupId>  
      <artifactId>lombok</artifactId> 
    </dependency>  
    <!--Runs configuration classes that are needed for multi-database connections and security-->
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-configuration-processor</artifactId>  
      <optional>true</optional> 
    </dependency>  
    <!--For database connection pooling, BasicDataSource in config files-->  
    <dependency> 
      <groupId>org.apache.commons</groupId>  
      <artifactId>commons-dbcp2</artifactId>  
      <version>2.8.0</version> 
    </dependency>  
    <!--WEB -->  
    <!--Spring boot for web applications, also parses the .yml file which is Spring Boots
		equivalent for .properties-->  
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-web</artifactId> 
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <!-- SECURITY -->  
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-security</artifactId> 
    </dependency>  
    <!-- JSON Web tokens for authentication -->  
    <dependency> 
      <groupId>com.auth0</groupId>  
      <artifactId>java-jwt</artifactId>  
      <version>3.8.3</version> 
    </dependency>  
    <!--GRAPHQL -->  
    <!--Runs graphql schema on start-up, doesn't need schema builder-->  
    <dependency> 
      <groupId>com.graphql-java-kickstart</groupId>  
      <artifactId>graphql-spring-boot-starter</artifactId>  
      <version>11.0.0</version> 
    </dependency>  
    <dependency> 
      <groupId>com.graphql-java-kickstart</groupId>  
      <artifactId>graphql-java-tools</artifactId>  
      <version>11.0.0</version> 
    </dependency>  
    <!--Runs GraphiQL for testing at /graphql, should be turned off for production-->
<!--    <dependency> -->
<!--      <groupId>com.graphql-java-kickstart</groupId>  -->
<!--      <artifactId>graphiql-spring-boot-starter</artifactId>  -->
<!--      <version>11.0.0</version> -->
<!--    </dependency>  -->
    <!--FOR TESTING-Turned off for production-->
<!--    <dependency> -->
<!--      <groupId>com.graphql-java-kickstart</groupId>  -->
<!--      <artifactId>graphql-spring-boot-starter-test</artifactId>  -->
<!--      <version>11.0.0</version>  -->
<!--      <scope>test</scope> -->
<!--    </dependency>  -->
<!--    <dependency> -->
<!--      <groupId>org.springframework.boot</groupId>  -->
<!--      <artifactId>spring-boot-starter-test</artifactId>  -->
<!--      <scope>test</scope> -->
<!--    </dependency>  -->
<!--    <dependency> -->
<!--      <groupId>org.springframework.security</groupId>  -->
<!--      <artifactId>spring-security-test</artifactId>  -->
<!--      <scope>test</scope> -->
<!--    </dependency> -->
  </dependencies>  
  <build> 
    <plugins> 
      <plugin> 
        <groupId>org.springframework.boot</groupId>  
        <artifactId>spring-boot-maven-plugin</artifactId> 
      </plugin>
      <!--enables deployment to azure-->
      <plugin> 
        <groupId>com.microsoft.azure</groupId>  
        <artifactId>azure-webapp-maven-plugin</artifactId>  
        <version>1.9.1</version>
        <configuration> 
          <schemaVersion>V2</schemaVersion>  
          <resourceGroup>Soleir</resourceGroup>  
          <appName>Soleir-API</appName>
          <region>westeurope</region>
          <pricingTier>B1</pricingTier>
          <runtime> 
            <os>linux</os>  
            <javaVersion>java11</javaVersion>
            <webContainer>java11</webContainer>
          </runtime>
          <appSettings>
            <property>
              <name>JAVA_OPTS</name>
              <value>-Dserver.port=80</value>
            </property>
          </appSettings>
          <deployment>
            <resources> 
              <resource> 
                <directory>${project.basedir}/target</directory>  
                <includes> 
                  <include>*.jar</include> 
                </includes> 
              </resource> 
            </resources> 
          </deployment> 
        </configuration> 
      </plugin> 
    </plugins> 
  </build> 
</project>
